// <auto-generated />
using EasyTalentos.Repositorio.DataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EasyTalentos.Repositorio.Migrations
{
    [DbContext(typeof(EasyContext))]
    [Migration("20201115235301_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EasyTalentos.Dominio.Entity.Candidato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Linkedin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Portfolio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PretencaoSalario")
                        .HasColumnType("float");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Candidatos");
                });

            modelBuilder.Entity("EasyTalentos.Dominio.Entity.Conhecimento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Android")
                        .HasColumnType("int");

                    b.Property<int>("Angular")
                        .HasColumnType("int");

                    b.Property<int>("AngularJs")
                        .HasColumnType("int");

                    b.Property<int>("AspNetMvc")
                        .HasColumnType("int");

                    b.Property<int>("AspNetWebForm")
                        .HasColumnType("int");

                    b.Property<int>("Bootstrap")
                        .HasColumnType("int");

                    b.Property<int>("C")
                        .HasColumnType("int");

                    b.Property<int>("CSharp")
                        .HasColumnType("int");

                    b.Property<int>("Cake")
                        .HasColumnType("int");

                    b.Property<int>("CandidatoId")
                        .HasColumnType("int");

                    b.Property<int>("Css")
                        .HasColumnType("int");

                    b.Property<int>("DJango")
                        .HasColumnType("int");

                    b.Property<int>("ExpressNodeJs")
                        .HasColumnType("int");

                    b.Property<int>("Flask")
                        .HasColumnType("int");

                    b.Property<int>("Flutter")
                        .HasColumnType("int");

                    b.Property<int>("Html")
                        .HasColumnType("int");

                    b.Property<int>("Illustrator")
                        .HasColumnType("int");

                    b.Property<int>("Ionic")
                        .HasColumnType("int");

                    b.Property<int>("Ios")
                        .HasColumnType("int");

                    b.Property<int>("Java")
                        .HasColumnType("int");

                    b.Property<int>("Jquery")
                        .HasColumnType("int");

                    b.Property<int>("Laravel")
                        .HasColumnType("int");

                    b.Property<string>("LinkCrud")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Majento")
                        .HasColumnType("int");

                    b.Property<int>("MySql")
                        .HasColumnType("int");

                    b.Property<int>("MySqlServer")
                        .HasColumnType("int");

                    b.Property<int>("NodeJs")
                        .HasColumnType("int");

                    b.Property<string>("Outras")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Photoshop")
                        .HasColumnType("int");

                    b.Property<int>("Php")
                        .HasColumnType("int");

                    b.Property<int>("Python")
                        .HasColumnType("int");

                    b.Property<int>("ReactJs")
                        .HasColumnType("int");

                    b.Property<int>("ReactNative")
                        .HasColumnType("int");

                    b.Property<int>("Ruby")
                        .HasColumnType("int");

                    b.Property<int>("SalesForce")
                        .HasColumnType("int");

                    b.Property<int>("Seo")
                        .HasColumnType("int");

                    b.Property<int>("Swift")
                        .HasColumnType("int");

                    b.Property<int>("Vue")
                        .HasColumnType("int");

                    b.Property<int>("WordPress")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CandidatoId")
                        .IsUnique();

                    b.ToTable("Conhecimento");
                });

            modelBuilder.Entity("EasyTalentos.Dominio.Entity.Disponibilidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AcimaDeOito")
                        .HasColumnType("bit");

                    b.Property<bool>("AteQuatro")
                        .HasColumnType("bit");

                    b.Property<int>("CandidatoId")
                        .HasColumnType("int");

                    b.Property<bool>("FinaisDeSemana")
                        .HasColumnType("bit");

                    b.Property<bool>("QuatroAteSeis")
                        .HasColumnType("bit");

                    b.Property<bool>("SeisAteOito")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CandidatoId")
                        .IsUnique();

                    b.ToTable("Disponibilidade");
                });

            modelBuilder.Entity("EasyTalentos.Dominio.Entity.Preferencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CandidatoId")
                        .HasColumnType("int");

                    b.Property<bool>("Comercial")
                        .HasColumnType("bit");

                    b.Property<bool>("Madrugada")
                        .HasColumnType("bit");

                    b.Property<bool>("Manha")
                        .HasColumnType("bit");

                    b.Property<bool>("Noite")
                        .HasColumnType("bit");

                    b.Property<bool>("Tarde")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CandidatoId")
                        .IsUnique();

                    b.ToTable("Preferencia");
                });

            modelBuilder.Entity("EasyTalentos.Dominio.Entity.Conhecimento", b =>
                {
                    b.HasOne("EasyTalentos.Dominio.Entity.Candidato", "Candidato")
                        .WithOne("Conhecimento")
                        .HasForeignKey("EasyTalentos.Dominio.Entity.Conhecimento", "CandidatoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EasyTalentos.Dominio.Entity.Disponibilidade", b =>
                {
                    b.HasOne("EasyTalentos.Dominio.Entity.Candidato", "Candidato")
                        .WithOne("Disponibilidade")
                        .HasForeignKey("EasyTalentos.Dominio.Entity.Disponibilidade", "CandidatoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EasyTalentos.Dominio.Entity.Preferencia", b =>
                {
                    b.HasOne("EasyTalentos.Dominio.Entity.Candidato", "Candidato")
                        .WithOne("Preferencia")
                        .HasForeignKey("EasyTalentos.Dominio.Entity.Preferencia", "CandidatoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
